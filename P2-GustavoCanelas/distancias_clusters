import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.metrics import pairwise_distances

# Paso 1: Crear 30 puntos aleatorios
np.random.seed(42)  # Para reproducibilidad
puntos = np.random.rand(30, 2)  # 30 puntos en 2D

# Paso 2: Calcular distancias
distancias = pairwise_distances(puntos)
print("Matriz de distancias:\n", distancias)

# Paso 3: Clustering con K-means
k = 3  # Número de clusters
kmeans = KMeans(n_clusters=k, random_state=42)
clusters = kmeans.fit_predict(puntos)

# Visualización
plt.figure(figsize=(8, 6))
plt.scatter(puntos[:, 0], puntos[:, 1], c=clusters, cmap='viridis', marker='o')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], 
            c='red', s=200, alpha=0.75, marker='X', label='Centroides')
plt.title('Clustering de Puntos Aleatorios')
plt.xlabel('Eje X')
plt.ylabel('Eje Y')
plt.legend()
plt.grid()
plt.show()